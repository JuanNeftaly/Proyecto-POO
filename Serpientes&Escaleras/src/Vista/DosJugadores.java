package Vista;
// aprobado

import Conexiones.*;
import Clases.AnimacionCasillasPVP;
import Clases.Casillas;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

public class DosJugadores extends javax.swing.JFrame {

    private String imgTablero;
    private Casillas casillasP1 = new Casillas(), casillasP2 = new Casillas();
    private int dadosTiradosP1 = 0, dadosTiradosP2 = 0;
    // cosas de la base 
    private String nicknameP1, nicknameP2, inicio, fin;
    private Color cP1, cP2;
    private boolean primera;
    private String rolP1 = "";
    private String rolP2 = "";

    Graphics graphicsP1;
    Graphics graphicsP2;

    /**
     * Creates new form DosJugadores
     */
    public DosJugadores(String imgTablero, Casillas casillasP1, Casillas casillasP2, String nicknameP1, String nicknameP2,
            Color cP1, Color cP2, boolean primera) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setIconImage(new ImageIcon(getClass().getResource("/imagenes/Serpiente.jpg")).getImage());

        this.nicknameP1 = nicknameP1;
        this.nicknameP2 = nicknameP2;
        this.cP1 = cP1;
        this.cP2 = cP2;
        this.primera = primera;

        ggPanel.setBackground(new Color(60, 63, 65, 225));

        //Se ocultan todos los datos del ganador
        ggLabel.setVisible(false);
        ggLabel1.setVisible(false);
        ggLabel2.setVisible(false);
        ggPanel.setVisible(false);
        lblDT.setVisible(false);
        lblResDT.setVisible(false);
        lblES.setVisible(false);
        lblResES.setVisible(false);
        lblSB.setVisible(false);
        lblResSB.setVisible(false);
        lblDes.setVisible(false);
        lblResDes.setVisible(false);

        this.getContentPane().setBackground(Color.BLACK); // color
        this.setLocationRelativeTo(null); // centrar 

        this.casillasP1 = casillasP1;

        this.casillasP2 = casillasP2;

        //Se guarda el tablero seleccionado desde la ventana Configuraciones
        this.imgTablero = imgTablero;

        //Se manda el url de la imagen del tablero y el label en el cual se pondr√°
        EscalaImagen(imgTablero, lblTablero);

        graphicsP1 = lblTablero.getGraphics();
        lblTablero.paintComponents(graphicsP1);

        graphicsP2 = lblTablero.getGraphics();
        lblTablero.paintComponents(graphicsP2);

        inicio = ConsultarFecha.consultarFecha();
    }

    // arreglos para guardar las cosas
    String imgArray[] = new String[]{"/imagenes/Dado1.png", "/imagenes/Dado2.png", "/imagenes/Dado3.png",
        "/imagenes/Dado4.png", "/imagenes/Dado5.png", "/imagenes/Dado6.png"};
    String txtArray[] = new String[]{"Sacaste 1", "Sacaste 2", "Sacaste 3",
        "Sacaste 4", "Sacaste 5", "Sacaste 6"};

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnDadoP1 = new javax.swing.JButton();
        lblDescripcion = new javax.swing.JLabel();
        lblImagen = new javax.swing.JLabel();
        bttnDadoP2 = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        ggPanel = new javax.swing.JPanel();
        ggLabel = new javax.swing.JLabel();
        lblDT = new javax.swing.JLabel();
        lblResDT = new javax.swing.JLabel();
        lblES = new javax.swing.JLabel();
        lblResES = new javax.swing.JLabel();
        lblSB = new javax.swing.JLabel();
        lblResSB = new javax.swing.JLabel();
        ggLabel1 = new javax.swing.JLabel();
        ggLabel2 = new javax.swing.JLabel();
        lblDes = new javax.swing.JLabel();
        lblResDes = new javax.swing.JLabel();
        lblTablero = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnDadoP1.setBackground(new java.awt.Color(0, 0, 0));
        btnDadoP1.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        btnDadoP1.setForeground(new java.awt.Color(255, 255, 255));
        btnDadoP1.setText("Dado P1");
        btnDadoP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDadoP1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnDadoP1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 13, -1, 30));

        lblDescripcion.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        lblDescripcion.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(lblDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 90, -1));

        lblImagen.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(lblImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 90, 80));

        bttnDadoP2.setBackground(new java.awt.Color(0, 0, 0));
        bttnDadoP2.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        bttnDadoP2.setForeground(new java.awt.Color(255, 255, 255));
        bttnDadoP2.setText("Dado P2");
        bttnDadoP2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnDadoP2ActionPerformed(evt);
            }
        });
        jPanel2.add(bttnDadoP2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, 30));

        btnVolver.setBackground(new java.awt.Color(0, 0, 0));
        btnVolver.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(255, 255, 255));
        btnVolver.setText("Volver al menu");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        jPanel2.add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 30, 150, 30));

        btnSalir.setBackground(new java.awt.Color(0, 0, 0));
        btnSalir.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(255, 255, 255));
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel2.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 70, 120, 30));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ggLabel.setFont(new java.awt.Font("Lucida Console", 1, 24)); // NOI18N
        ggLabel.setForeground(new java.awt.Color(204, 204, 204));
        ggLabel.setText("FELICIDADES");

        lblDT.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        lblDT.setForeground(new java.awt.Color(204, 204, 204));
        lblDT.setText("Dados tirados:");

        lblResDT.setFont(new java.awt.Font("Lucida Console", 2, 18)); // NOI18N
        lblResDT.setForeground(new java.awt.Color(204, 204, 204));
        lblResDT.setText("da");

        lblES.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        lblES.setForeground(new java.awt.Color(204, 204, 204));
        lblES.setText("Escaleras subidas:");

        lblResES.setFont(new java.awt.Font("Lucida Console", 2, 18)); // NOI18N
        lblResES.setForeground(new java.awt.Color(204, 204, 204));
        lblResES.setText("da");

        lblSB.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        lblSB.setForeground(new java.awt.Color(204, 204, 204));
        lblSB.setText("Serpientes bajadas:");

        lblResSB.setFont(new java.awt.Font("Lucida Console", 2, 18)); // NOI18N
        lblResSB.setForeground(new java.awt.Color(204, 204, 204));
        lblResSB.setText("da");

        ggLabel1.setFont(new java.awt.Font("Lucida Console", 1, 24)); // NOI18N
        ggLabel1.setForeground(new java.awt.Color(204, 204, 204));
        ggLabel1.setText("a");

        ggLabel2.setFont(new java.awt.Font("Lucida Console", 1, 24)); // NOI18N
        ggLabel2.setForeground(new java.awt.Color(204, 204, 204));
        ggLabel2.setText("HAS GANADO!!!");

        lblDes.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        lblDes.setForeground(new java.awt.Color(204, 204, 204));
        lblDes.setText("Desembaques:");

        lblResDes.setFont(new java.awt.Font("Lucida Console", 2, 18)); // NOI18N
        lblResDes.setForeground(new java.awt.Color(204, 204, 204));
        lblResDes.setText("da");

        javax.swing.GroupLayout ggPanelLayout = new javax.swing.GroupLayout(ggPanel);
        ggPanel.setLayout(ggPanelLayout);
        ggPanelLayout.setHorizontalGroup(
            ggPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ggPanelLayout.createSequentialGroup()
                .addGroup(ggPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ggPanelLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(ggLabel2))
                    .addGroup(ggPanelLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(ggPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ggPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ggPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSB)
                                    .addComponent(lblES)
                                    .addGroup(ggPanelLayout.createSequentialGroup()
                                        .addGap(97, 97, 97)
                                        .addComponent(lblResDes, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(ggPanelLayout.createSequentialGroup()
                                    .addGap(91, 91, 91)
                                    .addComponent(lblResDT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(ggPanelLayout.createSequentialGroup()
                                    .addGap(94, 94, 94)
                                    .addComponent(lblResES, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(ggPanelLayout.createSequentialGroup()
                                    .addGap(97, 97, 97)
                                    .addComponent(lblResSB, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(ggPanelLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(lblDT)))))
                .addGap(0, 96, Short.MAX_VALUE))
            .addGroup(ggPanelLayout.createSequentialGroup()
                .addGroup(ggPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ggPanelLayout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(ggLabel))
                    .addGroup(ggPanelLayout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(ggLabel1))
                    .addGroup(ggPanelLayout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(lblDes)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ggPanelLayout.setVerticalGroup(
            ggPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ggPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(ggLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ggLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ggLabel2)
                .addGap(18, 18, 18)
                .addComponent(lblDT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblResDT)
                .addGap(18, 18, 18)
                .addComponent(lblES)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblResES)
                .addGap(18, 18, 18)
                .addComponent(lblSB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblResSB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblResDes)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel1.add(ggPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 410, 380));

        lblTablero.setForeground(new java.awt.Color(0, 0, 0));
        lblTablero.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(lblTablero, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 834, 388));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDadoP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDadoP1ActionPerformed

        btnVolver.setEnabled(false);

        //Guarda el valor del dado
        int dado = Dado();

        // al dado le sumamos 1, entonces le restamos
        int index = dado - 1;
        lblDescripcion.setText(txtArray[index]);

        //Se manda la imagen del dado correspondiente y el label en el cual se pondr√° la imagen
        EscalaImagen(imgArray[index], lblImagen);

        //Aumenta el contador de la cantidad de dados tirados
        dadosTiradosP1++;

        btnDadoP1.setEnabled(false);

        bttnDadoP2.setEnabled(false);
        //Inicia el juego
        Juego(dado, 0);
    }//GEN-LAST:event_btnDadoP1ActionPerformed

    private void bttnDadoP2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnDadoP2ActionPerformed

        btnVolver.setEnabled(false);

        //Guarda el valor del dado
        int dado = Dado();

        // al dado le sumamos 1, entonces le restamos
        int index = dado - 1;
        lblDescripcion.setText(txtArray[index]);

        //Se manda la imagen del dado correspondiente y el label en el cual se pondr√° la imagen
        EscalaImagen(imgArray[index], lblImagen);

        //Aumenta el contador de la cantidad de dados tirados
        dadosTiradosP2++;

        bttnDadoP2.setEnabled(false);
        
        btnDadoP1.setEnabled(false);
        //Inicia el juego
        Juego(0, dado);
    }//GEN-LAST:event_bttnDadoP2ActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        Menu menu = new Menu();
        menu.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void EscalaImagen(String imgUrl, JLabel label) {
        //Se crea un image icon utilizando la direcci√≥n donde est√° almacenada la imagen
        ImageIcon imgIcon = new ImageIcon(getClass().getResource(imgUrl));
        //Se convierte a un objeto tipo Image la imagen original
        Image img = imgIcon.getImage();
        //Se modifica la imagen original en base a las dimensiones del label deseado
        Image imgScale = img.getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);
        //Se crea un nuevo ImageIcon en base a la imagen modificada
        ImageIcon scaledIcon = new ImageIcon(imgScale);
        //Se pone la imagen en el label
        label.setIcon(scaledIcon);
    }

    // funcion de dado
    private int Dado() {
        return (int) (Math.random() * 6) + 1;
    }

    private void Juego(int dadoP1, int dadoP2) {
        //NUEVO
        if (casillasP1.getContTotal() < casillasP1.getTotalCasillas() && casillasP2.getContTotal() < casillasP2.getTotalCasillas()) {
            //Se prepara la animaci√≥n del movimiento de la ficha
            AnimacionCasillasPVP animation = new AnimacionCasillasPVP(0, 0, lblTablero,
                    graphicsP1, graphicsP2, casillasP1, casillasP2, btnDadoP1, bttnDadoP2, cP1, cP2);

            //En caso de que el dado no sobrepase la cantidad de casillas restantes para ganar
            if (dadoP1 <= (casillasP1.getTotalCasillas() - casillasP1.getContTotal())
                    || dadoP2 <= (casillasP2.getTotalCasillas() - casillasP2.getContTotal())) {

                if (dadoP1 <= (casillasP1.getTotalCasillas() - casillasP1.getContTotal())) {
                    //Establece la casilla actual en la que se encuentra el jugador
                    casillasP1.setContTotal(casillasP1.getContTotal() + dadoP1);

                    //Se prepara la animaci√≥n del movimiento de la ficha
                    animation.setDadoP1(dadoP1);
                }

                if (dadoP2 <= (casillasP2.getTotalCasillas() - casillasP2.getContTotal())) {
                    //Establece la casilla actual en la que se encuentra el jugador
                    casillasP2.setContTotal(casillasP2.getContTotal() + dadoP2);

                    //Se prepara la animaci√≥n del movimiento de la ficha
                    animation.setDadoP2(dadoP2);
                }

                Thread threadAnimation = new Thread(animation);
                //Inicia la animaci√≥n
                threadAnimation.start();
            }
        } //En caso de haber ganado
        if (casillasP1.getContTotal() == casillasP1.getTotalCasillas() || casillasP2.getContTotal() == casillasP2.getTotalCasillas()) {
            //Se desactiva la opci√≥n de seguir tirando el dado
            btnDadoP1.setEnabled(false);
            bttnDadoP2.setEnabled(false);

            if (casillasP1.getContTotal() == casillasP1.getTotalCasillas()) {
                //Modifica las estadisticas del ganador
                rolP1 = "Ganador";
                rolP2 = "Perdedor";
                Ganador(casillasP1, dadosTiradosP1, nicknameP1);

            } else if (casillasP2.getContTotal() == casillasP2.getTotalCasillas()) {
                //Modifica las estadisticas del ganador
                rolP2 = "Ganador";
                rolP1 = "Perdedor";
                Ganador(casillasP2, dadosTiradosP2, nicknameP2);

            }
        }
    }

    //Muestra el panel del ganador con las estadisticas modificadas
    private void Ganador(Casillas casGanador, int dadoGanador, String nckGanador) {
        ggPanel.setVisible(true);
        ggLabel.setVisible(true);
        ggLabel1.setVisible(true);
        ggLabel1.setText(nckGanador);
        ggLabel2.setVisible(true);
        lblDT.setVisible(true);
        lblResDT.setText(String.valueOf(dadoGanador));
        lblResDT.setVisible(true);
        lblES.setVisible(true);
        lblResES.setText(String.valueOf(casGanador.getEscalerasSubidas()));
        lblResES.setVisible(true);
        lblSB.setVisible(true);
        lblResSB.setText(String.valueOf(casGanador.getSerpientesBajadas()));
        lblResSB.setVisible(true);
        lblDes.setVisible(true);
        lblResDes.setText(String.valueOf(casGanador.getDesembaques()));
        lblResDes.setVisible(true);

        // validacion de tablero
        fin = ConsultarFecha.consultarFecha();
        int id_tablero = TableroSeleccionado();

        // Guardando datos jugador 1
        Usuario user1 = new Usuario();
        int avances1 = casillasP1.getEscalerasSubidas();
        int retrocesos1 = casillasP1.getSerpientesBajadas();
        int id1 = user1.obtenerIdUser(nicknameP1);
        int desembaque1 = casillasP1.getDesembaques();

        // Guardando datos jugador 2
        Usuario user2 = new Usuario();
        int avances2 = casillasP2.getEscalerasSubidas();
        int retrocesos2 = casillasP2.getSerpientesBajadas();
        int id2 = user2.obtenerIdUser(nicknameP2);
        int desembaque2 = casillasP2.getDesembaques();

        int datos = AgregarPVP.consultarID(); // falla

        // Guardando en la base 
        AgregarPVP.agregarJuego_Competitivo(inicio, fin, id_tablero);
        // datos de p1
        AgregarPVP.agregarJuegoXJugador(datos, id1, dadosTiradosP1, avances1, retrocesos1, desembaque1, rolP1);
        // datos de p2
        AgregarPVP.agregarJuegoXJugador(datos, id2, dadosTiradosP2, avances2, retrocesos2, desembaque2, rolP2);
    }

    //Devuelve la imagen seleccionada
    public int TableroSeleccionado() {

        //En caso de que el jugador haya seleccionado el primer tablero devuelve la direccion respectiva de la imagen
        if (primera) {
            return 1;

            //En caso de haber seleccionado la imagen del segundo tablero
        } else {
            return 2;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DosJugadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DosJugadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DosJugadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DosJugadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DosJugadores(null, null, null, null, null, null, null, false).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDadoP1;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnVolver;
    private javax.swing.JButton bttnDadoP2;
    private javax.swing.JLabel ggLabel;
    private javax.swing.JLabel ggLabel1;
    private javax.swing.JLabel ggLabel2;
    private javax.swing.JPanel ggPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblDT;
    private javax.swing.JLabel lblDes;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblES;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JLabel lblResDT;
    private javax.swing.JLabel lblResDes;
    private javax.swing.JLabel lblResES;
    private javax.swing.JLabel lblResSB;
    private javax.swing.JLabel lblSB;
    private javax.swing.JLabel lblTablero;
    // End of variables declaration//GEN-END:variables
}
